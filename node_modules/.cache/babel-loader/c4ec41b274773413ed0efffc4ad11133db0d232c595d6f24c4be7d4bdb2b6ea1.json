{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Calendar',\n  data: function data() {\n    return {\n      selectedDate: null,\n      daysOfWeek: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      weeks: [],\n      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      currentMonth: new Date().getMonth()\n    };\n  },\n  methods: {\n    isToday: function isToday(date) {\n      var today = new Date();\n      return date.toDateString() === today.toDateString();\n    },\n    isSelected: function isSelected(date) {\n      var _this$selectedDate;\n      return date.toDateString() === ((_this$selectedDate = this.selectedDate) === null || _this$selectedDate === void 0 ? void 0 : _this$selectedDate.toDateString());\n    },\n    selectDate: function selectDate(date) {\n      this.selectedDate = date;\n      this.$emit('select-date', date);\n    },\n    prevMonth: function prevMonth() {\n      this.currentMonth--;\n      if (this.currentMonth < 0) {\n        this.currentMonth = 11; // December is the 12th month\n      }\n    },\n    nextMonth: function nextMonth() {\n      this.currentMonth++;\n      if (this.currentMonth > 11) {\n        this.currentMonth = 0; // January is the 1st month\n      }\n    }\n  },\n  mounted: function mounted() {\n    var today = new Date();\n    var startOfMonth = new Date(today.getFullYear(), this.currentMonth, 1);\n    var endOfMonth = new Date(today.getFullYear(), this.currentMonth + 1, 0);\n    var daysInMonth = endOfMonth.getDate();\n    var dayOfWeek = startOfMonth.getDay();\n    var date = 1;\n    var week = [];\n    for (var i = 0; i < 7; i++) {\n      if (i < dayOfWeek) {\n        week.push(null);\n      } else {\n        week.push(new Date(today.getFullYear(), this.currentMonth, date));\n        date++;\n      }\n    }\n    this.weeks.push(week);\n    while (date <= daysInMonth) {\n      week = [];\n      for (var _i = 0; _i < 7; _i++) {\n        if (date > daysInMonth) {\n          week.push(null);\n        } else {\n          week.push(new Date(today.getFullYear(), this.currentMonth, date));\n          date++;\n        }\n      }\n      this.weeks.push(week);\n    }\n  }\n};","map":{"version":3,"names":["name","data","selectedDate","daysOfWeek","weeks","months","currentMonth","Date","getMonth","methods","isToday","date","today","toDateString","isSelected","_this$selectedDate","selectDate","$emit","prevMonth","nextMonth","mounted","startOfMonth","getFullYear","endOfMonth","daysInMonth","getDate","dayOfWeek","getDay","week","i","push"],"sources":["src/views/Calendar.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <nav class=\"navbar\">\r\n      <div class=\"navbar-logo\">\r\n        <router-link to=\"/Home\">\r\n          <img src=\"../assets/logo.jpg\" alt=\"Logo\" width=\"120\" height=\"50\" style=\"margin-left: 50px;\">\r\n        </router-link>  \r\n      </div>\r\n      <div class=\"navbar-links\">\r\n        <router-link to=\"/Home\" class=\"nav-link\">Home</router-link>\r\n        <router-link to=\"/Calendar\" class=\"nav-link\">Calendar</router-link>\r\n        <router-link to=\"/Login\" class=\"nav-link\">Logout</router-link>\r\n      </div>\r\n    </nav>\r\n    <!-- Contents of Cal  -->\r\n    \r\n    <div class=\"background-square\">\r\n      <br>\r\n      <h1>Calendar</h1>\r\n      <br>\r\n      <div class=\"calendar-nav-1\">\r\n        <div class=\"calendar-nav\">\r\n          <button id=\"prev-btn\">Prev</button>\r\n          <h2 id=\"month\">July</h2>\r\n          <button id=\"next-btn\">Next</button>\r\n          <h2>Monthly view</h2>\r\n        </div>\r\n      </div>\r\n      <br>\r\n      <table>\r\n      <thead>\r\n        <tr>\r\n          <th v-for=\"(day, index) in daysOfWeek\" :key=\"index\">{{ day }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(week, weekIndex) in weeks\" :key=\"weekIndex\">\r\n          <td v-for=\"(day, dayIndex) in week\" :key=\"dayIndex\">\r\n  <button @click=\"handleClick(day)\">{{ day.getDate() }}</button>\r\n</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    </div> \r\n      \r\n      <!-- Rest of your content here -->\r\n    \r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'Calendar',\r\n  data() {\r\n    return {\r\n      selectedDate: null,\r\n      daysOfWeek: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n      weeks: [],\r\n      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n      currentMonth: new Date().getMonth()\r\n    }\r\n  },\r\n  methods: {\r\n    isToday(date) {\r\n      const today = new Date()\r\n      return date.toDateString() === today.toDateString()\r\n    },\r\n    isSelected(date) {\r\n      return date.toDateString() === this.selectedDate?.toDateString()\r\n    },\r\n    selectDate(date) {\r\n      this.selectedDate = date\r\n      this.$emit('select-date', date)\r\n    },\r\n    prevMonth() {\r\n      this.currentMonth--;\r\n      if (this.currentMonth < 0) {\r\n        this.currentMonth = 11; // December is the 12th month\r\n      }\r\n    },\r\n    nextMonth() {\r\n      this.currentMonth++;\r\n      if (this.currentMonth > 11) {\r\n        this.currentMonth = 0; // January is the 1st month\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    const today = new Date()\r\n    const startOfMonth = new Date(today.getFullYear(), this.currentMonth, 1)\r\n    const endOfMonth = new Date(today.getFullYear(), this.currentMonth + 1, 0)\r\n    const daysInMonth = endOfMonth.getDate()\r\n    const dayOfWeek = startOfMonth.getDay()\r\n    let date = 1;\r\n    let week = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i < dayOfWeek) {\r\n        week.push(null);\r\n      } else {\r\n        week.push(new Date(today.getFullYear(), this.currentMonth, date));\r\n        date++;\r\n      }\r\n    }\r\n    this.weeks.push(week);\r\n\r\n    while (date <= daysInMonth) {\r\n      week = [];\r\n      for (let i = 0; i < 7; i++) {\r\n        if (date > daysInMonth) {\r\n          week.push(null);\r\n        } else {\r\n          week.push(new Date(today.getFullYear(), this.currentMonth, date));\r\n          date++;\r\n        }\r\n      }\r\n      this.weeks.push(week);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.calendar {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n  border: 1px solid black;\r\n}\r\n\r\n.calendar td {\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.calendar td.today {\r\n  font-weight: bold;\r\n}\r\n\r\n.calendar td.selected {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n}\r\n\r\n.calendar td:hover {\r\n  cursor: pointer;\r\n  background-color: #f0f0f0;\r\n}\r\n.calendar-nav {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.prev-btn, .next-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n}\r\n\r\nh2 {\r\n  margin: 0;\r\n  font-size: 20px;\r\n}\r\n/* Style the calendar table */\r\ntable {\r\n      border-collapse: collapse;\r\n      margin: auto;\r\n      width: 100%;\r\n    }\r\n    th, td {\r\n      border: 1px solid black;\r\n      padding: 10px;\r\n    }\r\n    th {\r\n      background-color: #ccc;\r\n    }\r\n    td {\r\n      text-align: center;\r\n    }\r\n</style>"],"mappings":";AAkDA;EACAA,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,YAAA;MACAC,UAAA;MACAC,KAAA;MACAC,MAAA;MACAC,YAAA,MAAAC,IAAA,GAAAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,OAAA,WAAAA,QAAAC,IAAA;MACA,IAAAC,KAAA,OAAAL,IAAA;MACA,OAAAI,IAAA,CAAAE,YAAA,OAAAD,KAAA,CAAAC,YAAA;IACA;IACAC,UAAA,WAAAA,WAAAH,IAAA;MAAA,IAAAI,kBAAA;MACA,OAAAJ,IAAA,CAAAE,YAAA,SAAAE,kBAAA,QAAAb,YAAA,cAAAa,kBAAA,uBAAAA,kBAAA,CAAAF,YAAA;IACA;IACAG,UAAA,WAAAA,WAAAL,IAAA;MACA,KAAAT,YAAA,GAAAS,IAAA;MACA,KAAAM,KAAA,gBAAAN,IAAA;IACA;IACAO,SAAA,WAAAA,UAAA;MACA,KAAAZ,YAAA;MACA,SAAAA,YAAA;QACA,KAAAA,YAAA;MACA;IACA;IACAa,SAAA,WAAAA,UAAA;MACA,KAAAb,YAAA;MACA,SAAAA,YAAA;QACA,KAAAA,YAAA;MACA;IACA;EACA;EACAc,OAAA,WAAAA,QAAA;IACA,IAAAR,KAAA,OAAAL,IAAA;IACA,IAAAc,YAAA,OAAAd,IAAA,CAAAK,KAAA,CAAAU,WAAA,SAAAhB,YAAA;IACA,IAAAiB,UAAA,OAAAhB,IAAA,CAAAK,KAAA,CAAAU,WAAA,SAAAhB,YAAA;IACA,IAAAkB,WAAA,GAAAD,UAAA,CAAAE,OAAA;IACA,IAAAC,SAAA,GAAAL,YAAA,CAAAM,MAAA;IACA,IAAAhB,IAAA;IACA,IAAAiB,IAAA;IACA,SAAAC,CAAA,MAAAA,CAAA,MAAAA,CAAA;MACA,IAAAA,CAAA,GAAAH,SAAA;QACAE,IAAA,CAAAE,IAAA;MACA;QACAF,IAAA,CAAAE,IAAA,KAAAvB,IAAA,CAAAK,KAAA,CAAAU,WAAA,SAAAhB,YAAA,EAAAK,IAAA;QACAA,IAAA;MACA;IACA;IACA,KAAAP,KAAA,CAAA0B,IAAA,CAAAF,IAAA;IAEA,OAAAjB,IAAA,IAAAa,WAAA;MACAI,IAAA;MACA,SAAAC,EAAA,MAAAA,EAAA,MAAAA,EAAA;QACA,IAAAlB,IAAA,GAAAa,WAAA;UACAI,IAAA,CAAAE,IAAA;QACA;UACAF,IAAA,CAAAE,IAAA,KAAAvB,IAAA,CAAAK,KAAA,CAAAU,WAAA,SAAAhB,YAAA,EAAAK,IAAA;UACAA,IAAA;QACA;MACA;MACA,KAAAP,KAAA,CAAA0B,IAAA,CAAAF,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}