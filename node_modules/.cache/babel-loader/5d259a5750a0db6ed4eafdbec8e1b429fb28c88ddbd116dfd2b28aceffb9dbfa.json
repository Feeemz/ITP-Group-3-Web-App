{"ast":null,"code":"var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar monthEl = document.getElementById('month');\nvar prevBtn = document.getElementById('prev-btn');\nvar nextBtn = document.getElementById('next-btn');\nvar currentMonth = 6; // July is the 7th month, so we start at index 6\n\nprevBtn.addEventListener('click', function () {\n  currentMonth--;\n  if (currentMonth < 0) {\n    currentMonth = 11; // December is the 12th month, so we loop back to it\n  }\n\n  monthEl.textContent = months[currentMonth];\n});\nnextBtn.addEventListener('click', function () {\n  currentMonth++;\n  if (currentMonth > 11) {\n    currentMonth = 0; // January is the 1st month, so we loop back to it\n  }\n\n  monthEl.textContent = months[currentMonth];\n});","map":{"version":3,"names":["months","monthEl","document","getElementById","prevBtn","nextBtn","currentMonth","addEventListener","textContent"],"sources":["src/views/Calendar.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <nav class=\"navbar\">\r\n      <div class=\"navbar-logo\">\r\n        <router-link to=\"/Home\">\r\n          <img src=\"../assets/logo.jpg\" alt=\"Logo\" width=\"120\" height=\"50\" style=\"margin-left: 50px;\">\r\n        </router-link>  \r\n      </div>\r\n      <div class=\"navbar-links\">\r\n        <router-link to=\"/Home\" class=\"nav-link\">Home</router-link>\r\n        <router-link to=\"/Calendar\" class=\"nav-link\">Calendar</router-link>\r\n        <router-link to=\"/Login\" class=\"nav-link\">Logout</router-link>\r\n      </div>\r\n    </nav>\r\n    <!-- Contents of Cal  -->\r\n    \r\n    <div class=\"background-square\">\r\n      <br>\r\n      <h1>Calendar</h1>\r\n      <br>\r\n      <div class=\"calendar-nav\">\r\n        <div class=\"calendar-nav\">\r\n          <button id=\"prev-btn\">Prev</button>\r\n          <h2 id=\"month\">July</h2>\r\n          <button id=\"next-btn\">Next</button>\r\n          <h2>Monthly view</h2>\r\n        </div>\r\n      </div>\r\n      <br>\r\n      <table class=\"calendar\">\r\n        <thead>\r\n          <tr>\r\n            <th v-for=\"day in daysOfWeek\">{{ day }}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(week, index) in weeks\" :key=\"index\">\r\n            <td v-for=\"day in week\" :class=\"{ today: isToday(day), selected: isSelected(day) }\" @click=\"selectDate(day)\">\r\n              {{ day.getDate() }}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div> \r\n      \r\n      <!-- Rest of your content here -->\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Calendar',\r\n  data() {\r\n    return {\r\n      selectedDate: null,\r\n      daysOfWeek: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n      weeks: []\r\n    }\r\n  },\r\n  methods: {\r\n    isToday(date) {\r\n      const today = new Date()\r\n      return date.toDateString() === today.toDateString()\r\n    },\r\n    isSelected(date) {\r\n      return date.toDateString() === this.selectedDate?.toDateString()\r\n    },\r\n    selectDate(date) {\r\n      this.selectedDate = date\r\n      this.$emit('select-date', date)\r\n    }\r\n  },\r\n  mounted() {\r\n    const today = new Date()\r\n    const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1)\r\n    const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0)\r\n    const daysInMonth = endOfMonth.getDate()\r\n    const dayOfWeek = startOfMonth.getDay()\r\n    let date = 1;\r\n    let week = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      if (i < dayOfWeek) {\r\n        week.push(null);\r\n      } else {\r\n        week.push(new Date(today.getFullYear(), today.getMonth(), date));\r\n        date++;\r\n      }\r\n    }\r\n    this.weeks.push(week);\r\n\r\nwhile (date <= daysInMonth) {\r\n  week = [];\r\n  for (let i = 0; i < 7; i++) {\r\n    if (date > daysInMonth) {\r\n      week.push(null);\r\n    } else {\r\n      week.push(new Date(today.getFullYear(), today.getMonth(), date));\r\n      date++;\r\n    }\r\n  }\r\n  this.weeks.push(week);\r\n}\r\n\r\n    while (date <= daysInMonth) {\r\n      week = []\r\n      for (let i = 0; i < 7; i++) {\r\n        if (date > daysInMonth) {\r\n          week.push(null)\r\n        } else {\r\n          week.push(new Date(today.getFullYear(), today.getMonth(), date))\r\n          date++\r\n        }\r\n      }\r\n      this.weeks.push(week)\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n<script>\r\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nconst monthEl = document.getElementById('month');\r\nconst prevBtn = document.getElementById('prev-btn');\r\nconst nextBtn = document.getElementById('next-btn');\r\nlet currentMonth = 6; // July is the 7th month, so we start at index 6\r\n\r\nprevBtn.addEventListener('click', () => {\r\n  currentMonth--;\r\n  if (currentMonth < 0) {\r\n    currentMonth = 11; // December is the 12th month, so we loop back to it\r\n  }\r\n  monthEl.textContent = months[currentMonth];\r\n});\r\n\r\nnextBtn.addEventListener('click', () => {\r\n  currentMonth++;\r\n  if (currentMonth > 11) {\r\n    currentMonth = 0; // January is the 1st month, so we loop back to it\r\n  }\r\n  monthEl.textContent = months[currentMonth];\r\n});\r\n</script>\r\n<style scoped>\r\n.calendar {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n  border: 1px solid black;\r\n}\r\n\r\n.calendar td {\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.calendar td.today {\r\n  font-weight: bold;\r\n}\r\n\r\n.calendar td.selected {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n}\r\n\r\n.calendar td:hover {\r\n  cursor: pointer;\r\n  background-color: #f0f0f0;\r\n}\r\n.calendar-nav {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.prev-btn, .next-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n}\r\n\r\nh2 {\r\n  margin: 0;\r\n  font-size: 20px;\r\n}\r\n</style>"],"mappings":"AAyHA,IAAAA,MAAA;AACA,IAAAC,OAAA,GAAAC,QAAA,CAAAC,cAAA;AACA,IAAAC,OAAA,GAAAF,QAAA,CAAAC,cAAA;AACA,IAAAE,OAAA,GAAAH,QAAA,CAAAC,cAAA;AACA,IAAAG,YAAA;;AAEAF,OAAA,CAAAG,gBAAA;EACAD,YAAA;EACA,IAAAA,YAAA;IACAA,YAAA;EACA;;EACAL,OAAA,CAAAO,WAAA,GAAAR,MAAA,CAAAM,YAAA;AACA;AAEAD,OAAA,CAAAE,gBAAA;EACAD,YAAA;EACA,IAAAA,YAAA;IACAA,YAAA;EACA;;EACAL,OAAA,CAAAO,WAAA,GAAAR,MAAA,CAAAM,YAAA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}