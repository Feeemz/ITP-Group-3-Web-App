{"ast":null,"code":"import \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport Paginate from 'vuejs-paginate';\nexport default {\n  data: function data() {\n    return {\n      staffNames: [{\n        id: 1,\n        name: \"John Doe\"\n      }, {\n        id: 2,\n        name: \"Jane Smith\"\n      }, {\n        id: 3,\n        name: \"Michael Johnson\"\n      }, {\n        id: 4,\n        name: \"Emily Davis\"\n      }, {\n        id: 5,\n        name: \"David Wilson\"\n      }, {\n        id: 1,\n        name: \"John Doe\"\n      }, {\n        id: 2,\n        name: \"Jane Smith\"\n      }, {\n        id: 3,\n        name: \"Michael Johnson\"\n      }, {\n        id: 4,\n        name: \"Emily Davis\"\n      }, {\n        id: 5,\n        name: \"David Wilson\"\n      }, {\n        id: 1,\n        name: \"John Doe\"\n      }, {\n        id: 2,\n        name: \"Jane Smith\"\n      }, {\n        id: 3,\n        name: \"Michael Johnson\"\n      }, {\n        id: 4,\n        name: \"Emily Davis\"\n      }, {\n        id: 5,\n        name: \"David Wilson\"\n      }, {\n        id: 1,\n        name: \"John Doe\"\n      }, {\n        id: 2,\n        name: \"Jane Smith\"\n      }, {\n        id: 3,\n        name: \"Michael Johnson\"\n      }, {\n        id: 4,\n        name: \"Emily Davis\"\n      }, {\n        id: 5,\n        name: \"David Wilson\"\n      }],\n      attendanceData: [{\n        day: 1,\n        staffId: 1,\n        status: \"Yes\",\n        time: \"09:00 AM\"\n      }, {\n        day: 1,\n        staffId: 2,\n        status: \"No\",\n        time: \"\"\n      }, {\n        day: 1,\n        staffId: 3,\n        status: \"Yes\",\n        time: \"10:30 AM\"\n      }, {\n        day: 1,\n        staffId: 4,\n        status: \"Yes\",\n        time: \"11:15 AM\"\n      }, {\n        day: 1,\n        staffId: 5,\n        status: \"No\",\n        time: \"\"\n      }],\n      hoveredCell: {\n        day: null,\n        staffId: null\n      },\n      pageSize: 7,\n      currentPage: 1,\n      currentMonth: new Date().getMonth(),\n      days: Array.from({\n        length: new Date(new Date().getFullYear(), this.currentMonth, 0).getDate()\n      }, function (_, i) {\n        return i + 1;\n      })\n    };\n  },\n  methods: {\n    getAttendanceStatus: function getAttendanceStatus(day, staffId) {\n      var entry = this.attendanceData.find(function (data) {\n        return data.day === day && data.staffId === staffId;\n      });\n      return entry ? entry.status : \"\";\n    },\n    getAttendanceColor: function getAttendanceColor(day, staffId) {\n      var status = this.getAttendanceStatus(day, staffId);\n      return status === \"Yes\" ? \"green\" : \"#FF735A\";\n    },\n    getAttendanceTime: function getAttendanceTime(day, staffId) {\n      var entry = this.attendanceData.find(function (data) {\n        return data.day === day && data.staffId === staffId;\n      });\n      return entry ? entry.time : \"\";\n    },\n    handleMouseEnter: function handleMouseEnter(day, staffId) {\n      this.hoveredCell.day = day;\n      this.hoveredCell.staffId = staffId;\n    },\n    handleMouseLeave: function handleMouseLeave(day, staffId) {\n      this.hoveredCell.day = null;\n      this.hoveredCell.staffId = null;\n    },\n    showAttendanceTime: function showAttendanceTime(day, staffId) {\n      return this.hoveredCell.day === day && this.hoveredCell.staffId === staffId;\n    },\n    clickHandler: function clickHandler(pageNum) {\n      this.currentPage = pageNum;\n    }\n  },\n  components: {\n    'paginate': Paginate\n  },\n  computed: {\n    pages: function pages() {\n      return Math.floor(this.dateCount / this.pageSize) + 1;\n    },\n    dateCount: function dateCount() {\n      return new Date(new Date().getFullYear(), this.currentMonth, 0).getDate();\n    },\n    slicedDay: function slicedDay() {\n      var startIndex = this.pageSize * (this.currentPage - 1);\n      var endIndex = startIndex + this.pageSize;\n      return this.days.slice(startIndex, endIndex);\n    }\n  }\n};","map":{"version":3,"names":["Paginate","data","staffNames","id","name","attendanceData","day","staffId","status","time","hoveredCell","pageSize","currentPage","currentMonth","Date","getMonth","days","Array","from","length","getFullYear","getDate","_","i","methods","getAttendanceStatus","entry","find","getAttendanceColor","getAttendanceTime","handleMouseEnter","handleMouseLeave","showAttendanceTime","clickHandler","pageNum","components","computed","pages","Math","floor","dateCount","slicedDay","startIndex","endIndex","slice"],"sources":["src/views/Calendar.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <nav class=\"navbar \">\r\n      <div class=\"navbar-logo\">\r\n        <router-link to=\"/Home\">\r\n          <img src=\"../assets/logo.jpg\" alt=\"Logo\" width=\"120\" height=\"50\" style=\"margin-left: 50px;\">\r\n        </router-link>\r\n      </div>\r\n      <div class=\"navbar-links\">\r\n        <router-link to=\"/Home\" class=\"nav-link\">Home</router-link>\r\n        <router-link to=\"/Calendar\" class=\"nav-link\">Calendar</router-link>\r\n        <router-link to=\"/Login\" class=\"nav-link\">Logout</router-link>\r\n      </div>\r\n    </nav>\r\n    <!-- Contents -->\r\n    <div class=\"background-square\">\r\n      <br>\r\n      <div class=\"main-title\">\r\n        <h1>Calendar</h1>\r\n      </div>\r\n\r\n      <br>\r\n      <div class=\"container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Day</th>\r\n              <th v-for=\"day in slicedDay\" :key=\"day\">{{ day }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <!-- <tr v-for=\"day in days\" :key=\"day\">\r\n          <td>{{ day }}</td>\r\n          <td v-for=\"staff in staffNames\" :key=\"staff.id\" @mouseenter=\"handleMouseEnter(day, staff.id)\" @mouseleave=\"handleMouseLeave(day, staff.id)\">\r\n            <div :style=\"{ backgroundColor: getAttendanceColor(day, staff.id) }\" class=\"attendance-cell\">\r\n              {{ getAttendanceStatus(day, staff.id) }}\r\n              <div v-if=\"showAttendanceTime(day, staff.id)\" class=\"attendance-time-box\">\r\n                {{ getAttendanceTime(day, staff.id) }}\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </tr> -->\r\n          </tbody>\r\n        </table>\r\n        <paginate v-model=\"currentPage\" :page-count=\"pages\" :click-handler=\"clickHandler\" :prev-text=\"'Previous'\"\r\n          :next-text=\"'Next'\" :container-class=\"'pagination'\" :page-class=\"'page-item'\">\r\n        </paginate>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport Paginate from 'vuejs-paginate'\r\nexport default {\r\n  data() {\r\n    return {\r\n      staffNames: [\r\n        { id: 1, name: \"John Doe\" },\r\n        { id: 2, name: \"Jane Smith\" },\r\n        { id: 3, name: \"Michael Johnson\" },\r\n        { id: 4, name: \"Emily Davis\" },\r\n        { id: 5, name: \"David Wilson\" },\r\n        { id: 1, name: \"John Doe\" },\r\n        { id: 2, name: \"Jane Smith\" },\r\n        { id: 3, name: \"Michael Johnson\" },\r\n        { id: 4, name: \"Emily Davis\" },\r\n        { id: 5, name: \"David Wilson\" }, { id: 1, name: \"John Doe\" },\r\n        { id: 2, name: \"Jane Smith\" },\r\n        { id: 3, name: \"Michael Johnson\" },\r\n        { id: 4, name: \"Emily Davis\" },\r\n        { id: 5, name: \"David Wilson\" },\r\n        { id: 1, name: \"John Doe\" },\r\n        { id: 2, name: \"Jane Smith\" },\r\n        { id: 3, name: \"Michael Johnson\" },\r\n        { id: 4, name: \"Emily Davis\" },\r\n        { id: 5, name: \"David Wilson\" }\r\n      ],\r\n      attendanceData: [\r\n        { day: 1, staffId: 1, status: \"Yes\", time: \"09:00 AM\" },\r\n        { day: 1, staffId: 2, status: \"No\", time: \"\" },\r\n        { day: 1, staffId: 3, status: \"Yes\", time: \"10:30 AM\" },\r\n        { day: 1, staffId: 4, status: \"Yes\", time: \"11:15 AM\" },\r\n        { day: 1, staffId: 5, status: \"No\", time: \"\" },\r\n      ],\r\n      hoveredCell: { day: null, staffId: null },\r\n      pageSize: 7,\r\n      currentPage: 1,\r\n      currentMonth: new Date().getMonth(),\r\n      days: Array.from({ length: new Date(new Date().getFullYear(), this.currentMonth, 0).getDate() }, (_, i) => i + 1)\r\n    };\r\n  },\r\n  methods: {\r\n    getAttendanceStatus(day, staffId) {\r\n      const entry = this.attendanceData.find(\r\n        data => data.day === day && data.staffId === staffId\r\n      );\r\n      return entry ? entry.status : \"\";\r\n    },\r\n    getAttendanceColor(day, staffId) {\r\n      const status = this.getAttendanceStatus(day, staffId);\r\n      return status === \"Yes\" ? \"green\" : \"#FF735A\";\r\n    },\r\n    getAttendanceTime(day, staffId) {\r\n      const entry = this.attendanceData.find(\r\n        data => data.day === day && data.staffId === staffId\r\n      );\r\n      return entry ? entry.time : \"\";\r\n    },\r\n    handleMouseEnter(day, staffId) {\r\n      this.hoveredCell.day = day;\r\n      this.hoveredCell.staffId = staffId;\r\n    },\r\n    handleMouseLeave(day, staffId) {\r\n      this.hoveredCell.day = null;\r\n      this.hoveredCell.staffId = null;\r\n    },\r\n    showAttendanceTime(day, staffId) {\r\n      return this.hoveredCell.day === day && this.hoveredCell.staffId === staffId;\r\n    },\r\n    clickHandler: function (pageNum) {\r\n      this.currentPage = pageNum;\r\n    }\r\n  },\r\n  components: {\r\n    'paginate': Paginate\r\n  },\r\n  computed: {\r\n    pages: function () {\r\n      return Math.floor(this.dateCount / this.pageSize) + 1\r\n    },\r\n    dateCount: function () {\r\n      return new Date(new Date().getFullYear(), this.currentMonth, 0).getDate()\r\n    },\r\n    slicedDay: function () {\r\n      const startIndex = this.pageSize * (this.currentPage - 1);\r\n      const endIndex = startIndex + this.pageSize;\r\n      return this.days.slice(startIndex, endIndex);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.main-title {\r\n  text-align: center;\r\n}\r\n\r\nbutton {\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  background-color: #f2f2f2;\r\n  border: none;\r\n  border-radius: 0;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #ddd;\r\n}\r\n\r\nbutton:active {\r\n  background-color: #ccc;\r\n}\r\n\r\n.calendar {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n  border: 1px solid black;\r\n}\r\n\r\n.calendar td {\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.calendar td.today {\r\n  font-weight: bold;\r\n}\r\n\r\n.attendance-cell {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 30px;\r\n  /* Adjusted height to make the cell smaller */\r\n  width: 50px;\r\n  /* Adjusted width to make the cell smaller */\r\n  border-radius: 10px;\r\n  z-index: 1;\r\n}\r\n\r\n.attendance-time-box {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: calc(100% + 10px);\r\n  /* Adjusted the left position to create a gap between the tile and the box */\r\n  transform: translateY(-50%);\r\n  background-color: white;\r\n  padding: 5px;\r\n  border: 2px solid black;\r\n  display: inline-block;\r\n  border-radius: 5px;\r\n  z-index: 2;\r\n}\r\n\r\n.calendar td.selected {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n}\r\n\r\n.calendar td:hover {\r\n  cursor: pointer;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.calendar-nav {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.btn-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.prev-btn,\r\n.next-btn {\r\n  background-color: #FFA500;\r\n  color: FFFFFF;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 1px 20px;\r\n  cursor: pointer;\r\n  width: 100px;\r\n  border-radius: 8px;\r\n\r\n}\r\n\r\nh2 {\r\n  margin: 0;\r\n  font-size: 20px;\r\n}\r\n\r\n/* Style the calendar table */\r\n\r\n\r\n\r\n.container {\r\n  width: 1432px;\r\n  /* Set the width of the container */\r\n  overflow-x: auto;\r\n  /* Enable horizontal scrolling */\r\n  overflow-y: hidden;\r\n  /* Hide vertical scrolling */\r\n  direction: rtl;\r\n  /* Reverse the direction of content */\r\n}\r\n\r\ntable {\r\n  width: max-content;\r\n  /* Set the table to adjust its width based on content */\r\n  white-space: nowrap;\r\n  /* Prevent line breaks within table cells */\r\n  direction: ltr;\r\n  /* Restore the normal direction of content */\r\n}\r\n\r\n/* Additional styles for the table, cells, and headers (adjust as needed) */\r\ntable {\r\n  border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n  padding: 8px;\r\n  border: 1px solid black;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n  text-align: left;\r\n}\r\n\r\n.day-btn {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.gray {\r\n  color: #ccc;\r\n}\r\n\r\n.red {\r\n  background-color: #FF8D79;\r\n  color: white;\r\n}\r\n\r\n.day-tile.is-attended {\r\n  background-color: #FFA500;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}