{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport Vuex from \"vuex\";\nimport Vue from \"vue\";\nvar store = new Vuex.Store({\n  state: {\n    // Define your initial state here\n    count: 0,\n    isLoggedIn: false,\n    user: null\n  },\n  mutations: {\n    // Define your mutations here\n    increment: function increment(state) {\n      state.count++;\n    },\n    setIsLoggedIn: function setIsLoggedIn(state, value) {\n      state.isLoggedIn = value;\n    },\n    setUser: function setUser(state, user) {\n      state.user = user;\n    }\n  },\n  actions: {\n    // Define your actions here\n    login: function login(_ref, credentials) {\n      var commit = _ref.commit;\n      // Call your API to authenticate the user here\n      // Then commit the setIsLoggedIn and setUser mutations\n      commit('setIsLoggedIn', true);\n      commit('setUser', {\n        name: 'John Doe',\n        email: 'john@example.com'\n      });\n    },\n    logout: function logout(_ref2) {\n      var commit = _ref2.commit;\n      // Call your API to log out the user here\n      // Then commit the setIsLoggedIn and setUser mutations\n      commit('setIsLoggedIn', false);\n      commit('setUser', null);\n    }\n  },\n  getters: {\n    // Define your getters here\n    fullName: function fullName(state) {\n      if (state.user) {\n        return state.user.name;\n      } else {\n        return '';\n      }\n    }\n  }\n});","map":{"version":3,"names":["Vuex","Vue","store","Store","state","count","isLoggedIn","user","mutations","increment","setIsLoggedIn","value","setUser","actions","login","_ref","credentials","commit","name","email","logout","_ref2","getters","fullName"],"sources":["D:/LONG VU/Swin/Summer2023/ICT30001-IT-Project/group-3-vue-ui/src/store.js"],"sourcesContent":["import Vuex from \"vuex\"\r\nimport Vue from \"vue\"\r\n\r\n\r\n\r\nconst store = new Vuex.Store({\r\n    state: {\r\n      // Define your initial state here\r\n      count: 0,\r\n      isLoggedIn: false,\r\n      user: null\r\n    },\r\n    mutations: {\r\n      // Define your mutations here\r\n      increment (state) {\r\n        state.count++\r\n      },\r\n      setIsLoggedIn (state, value) {\r\n        state.isLoggedIn = value\r\n      },\r\n      setUser (state, user) {\r\n        state.user = user\r\n      }\r\n    },\r\n    actions: {\r\n      // Define your actions here\r\n      login ({ commit }, credentials) {\r\n        // Call your API to authenticate the user here\r\n        // Then commit the setIsLoggedIn and setUser mutations\r\n        commit('setIsLoggedIn', true)\r\n        commit('setUser', { name: 'John Doe', email: 'john@example.com' })\r\n      },\r\n      logout ({ commit }) {\r\n        // Call your API to log out the user here\r\n        // Then commit the setIsLoggedIn and setUser mutations\r\n        commit('setIsLoggedIn', false)\r\n        commit('setUser', null)\r\n      }\r\n    },\r\n    getters: {\r\n      // Define your getters here\r\n      fullName (state) {\r\n        if (state.user) {\r\n          return state.user.name\r\n        } else {\r\n          return ''\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,GAAG,MAAM,KAAK;AAIrB,IAAMC,KAAK,GAAG,IAAIF,IAAI,CAACG,KAAK,CAAC;EACzBC,KAAK,EAAE;IACL;IACAC,KAAK,EAAE,CAAC;IACRC,UAAU,EAAE,KAAK;IACjBC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;IACT;IACAC,SAAS,WAAAA,UAAEL,KAAK,EAAE;MAChBA,KAAK,CAACC,KAAK,EAAE;IACf,CAAC;IACDK,aAAa,WAAAA,cAAEN,KAAK,EAAEO,KAAK,EAAE;MAC3BP,KAAK,CAACE,UAAU,GAAGK,KAAK;IAC1B,CAAC;IACDC,OAAO,WAAAA,QAAER,KAAK,EAAEG,IAAI,EAAE;MACpBH,KAAK,CAACG,IAAI,GAAGA,IAAI;IACnB;EACF,CAAC;EACDM,OAAO,EAAE;IACP;IACAC,KAAK,WAAAA,MAAAC,IAAA,EAAcC,WAAW,EAAE;MAAA,IAAvBC,MAAM,GAAAF,IAAA,CAANE,MAAM;MACb;MACA;MACAA,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC;MAC7BA,MAAM,CAAC,SAAS,EAAE;QAAEC,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAmB,CAAC,CAAC;IACpE,CAAC;IACDC,MAAM,WAAAA,OAAAC,KAAA,EAAc;MAAA,IAAVJ,MAAM,GAAAI,KAAA,CAANJ,MAAM;MACd;MACA;MACAA,MAAM,CAAC,eAAe,EAAE,KAAK,CAAC;MAC9BA,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;IACzB;EACF,CAAC;EACDK,OAAO,EAAE;IACP;IACAC,QAAQ,WAAAA,SAAEnB,KAAK,EAAE;MACf,IAAIA,KAAK,CAACG,IAAI,EAAE;QACd,OAAOH,KAAK,CAACG,IAAI,CAACW,IAAI;MACxB,CAAC,MAAM;QACL,OAAO,EAAE;MACX;IACF;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}